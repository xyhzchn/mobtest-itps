<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoozoo.mapper.RoleMapper">

    <!--添加角色到数据库-->
   <insert id="insertOneRole" parameterType="com.yoozoo.bean.Role">
       insert
       into
       role(roleName,roleDesc,isDelete,createTime,updateTime)
       values
       (#{roleName},#{roleDesc},#{isDelete},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
   </insert>

    <!--查询角色列表，若无查询条件则查询所有列表，若有查询条件，则根据查询条件查询-->
    <select id="selectAllRoles" parameterType="com.yoozoo.bean.Role" resultType="com.yoozoo.bean.Role">
        select * from role
        <where>

            <if test="roleId != null and roleId != ''">
                role.roleId = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                and role.roleName like '%${roleName}%'
            </if>
            and role.isDelete = 0
        </where>
    </select>
    <!--查询指定id的角色信息-->
    <select id="selectRoleById" parameterType="java.lang.Integer" resultType="com.yoozoo.bean.Role">
        select * from role
         <where>
             role.roleId = #{id}
         </where>
    </select>
    <!--修改角色信息-->
    <update id="updateOneRole" parameterType="com.yoozoo.bean.Role">
        update role set roleName = #{roleName},roleDesc = #{roleDesc},updateTime = #{updateTime,jdbcType=TIMESTAMP}
        <where>
            roleId = #{roleId}
        </where>
    </update>

    <!--删除角色-->
    <update id="deleteRoleById" parameterType="com.yoozoo.bean.Role">
        update role set isDelete = #{isDelete},updateTime = #{updateTime,jdbcType=TIMESTAMP}
        <where>
            roleId = #{roleId}
        </where>
    </update>
    <!--删除角色时，删除对应关联表中的信息-->
    <update id="deleteMiddleRole" parameterType="com.yoozoo.bean.Role">
        update user_role set isDelete = #{isDelete},updateTime = #{updateTime,jdbcType=TIMESTAMP}
        <where>
            roleId = #{roleId}
        </where>
    </update>
    <!--删除角色时，删除对应用户信息-->
    <update id="deleteUsers" parameterType="com.yoozoo.bean.Role">
        update users set isDelete = #{isDelete},updateTime = #{updateTime,jdbcType=TIMESTAMP}
        <where>
           userId in (select userId from user_role where roleId = #{roleId})
        </where>
    </update>

    <!--获取角色列表-->
    <select id="selectRoleIdAndName"  resultType="com.yoozoo.bean.Role">
        select roleId,roleName from role
        <where>
            isDelete  = 0;
        </where>
    </select>

</mapper>
